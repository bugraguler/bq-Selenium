we have 8 Locators:
-ID
-Name
-TagName
-Class
-Xpath
-LinkText
-PartialLinkText
-CSS Selector

*******Relative xpath*******
Syntax for relative xpath:
//tagname[@attribute = 'attribute value']
//input[@id = 'email']

Identifying elements by its text:this is also relative xpath
//tagname[text() = 'text value']
//h2[text() = 'Connect with friends and the world around you on Facebook.']
//a[text() = 'Create new account']

identifying elements by using contains method
//tagname[contains(@attribute, 'partial attribute value')]
//input[contains(@placeholder, 'Email')]
//input[contains(text(), 'Email')]

Starts-with will identify the element with partial starting value
//tagname[starts-with(@attribute, 'partial starting attribute value')]
//button[starts-with(@data-testid, 'royal')]

Not:ends-with was used in xpath 1.0, we are using 2.0 and this method is not available


*******Advanced Xpath is based on parent and child, sibling relationships*******
identifying elements by following sibling
//tagname[@attribute = 'attribute value']/following-sibling::tagname
//input[@id = 'calFromDate']/following-sibling::img

identifying elements by preceding siblings
//tagname[@attribute = 'attribute value']/preceding-sibling::tagname
//span[text() = '& Orders']/preceding-sibling::span
//input[@id = 'calFromDate']/preceding-sibling::label

identifying elements by parents
//tagname[@attribute = 'attribute value']/parent::parentTagName
//span[text() = '& Orders']/parent::a

identifying an element by its ancestor
//tagname[@attribute = 'attribute value']/ancestor::ancestorTagname
//input[@id = 'email']/ancestor::form

identifying element by index
(//img[@class = 'ui-datepicker-trigger'])[2]


*******CSS Selector (Cascading style sheet)*******
it is another way of locating elements on the web page

Syntax:
tagname[attribute = 'attribute value']
button[type = 'submit']

Shortcuts for CSS:

Shortcut for ClassName --> "."
Syntax: tagname.classNameValue
input.button

Shortcut for ID --> "#"
Syntax: tagname#IDValue
input#twotabsearchtextbox

contains() method in css:
* symbol represents contains method
tagname[attribute *= 'attribute value']
input[placeholder *= 'phone']
  farkı gör diye yapıştırdım bu sağdaki relative xpath //input[contains(@placeholder, 'Email')]

starts-with method in css:
^ (Circumflex) symbol represents starts with method
tagname[attribute ^= 'starting attribute value']
input[type ^= 'pass']

ends-with method in css:
$ symbol represents ends-with method in css
tagname[attribute $= 'ending attribute value']
img[src $= 'syntax.png']

Not: CSS does not give an oportunity to locate the element by its text

Xpath vs CSS
-- CSS cannot locate the elements by text whereas xpath can
-- no ends-with method in xpath
-- css is faster than xpath (finding elements)
-- css has shortcuts
-- no advanced CSS
-- CSS has more simple syntax than Xpath



* sign in xpath is a wild card which can identfy any tagname
//*[contains(text(),'Welcome')]

*[contains(text(),'syntax')]
Baştaki yıldız ANY TAGNAME



WebElement Commands:
Consists of several methods where we can perform an action and get the element state on the webpage

isEnabled()    --  boolean value
isDisplayed()  --  boolean value
isSelected()   --  boolean value
clear()        --  void
getText()      --  String value
getAttribute() --  String value
submit()       --  void




